{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  console.log(state, 'hai');\n\n  if (action.type === \"USER INPUT\") {\n    return {\n      value: action.payload,\n      isValid: action.payload.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [state, dispatch] = useReducer(reducer, {\n    value: '',\n    isValid: false\n  });\n  useEffect(() => {\n    console.log('E');\n    console.log('testing', y);\n  }, [enteredEmail]); //   useEffect(()=>{\n  //     console.log('checking the effect!');\n  //     const identifier=setTimeout(()=>{\n  //       setFormIsValid(\n  //         state.value.includes('@') && enteredPassword.trim().length > 6\n  //       );\n  //     },500)\n  //     return ()=>{console.log('cleanUp!')\n  //     clearTimeout(identifier);}// clean up function(when the component is unmounts from the DOM )\n  //    },[enteredEmail,enteredPassword])\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value)\n    dispatch({\n      type: \"USER INPUT\",\n      payload: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(state.value.includes('@') && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatch({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(state.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${state.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: state.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          onClick: () => {\n            dispatch({\n              type: \"email\",\n              payload: {\n                email: state.value,\n                password: enteredPassword\n              }\n            });\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"VmQjfDxmEHgtQ2r2nQ0fNaleaRQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","reducer","state","action","console","log","type","value","payload","isValid","includes","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","dispatch","y","enteredEmail","emailChangeHandler","event","target","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn","email","password"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst reducer=(state, action)=>{\n  console.log(state,'hai');\n  if(action.type === \"USER INPUT\"){\n    return{value:action.payload, isValid:action.payload.includes('@')};\n  }\n  if(action.type==='INPUT_BLUR'){\n    return{value:state.value, isValid:state.value.includes('@')};\n  }\n  return{value:'', isValid:false}\n\n}\nconst Login = (props) => {\n \n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [state, dispatch]=useReducer(reducer, {value:'',isValid:false})\n \n  useEffect(() => {\n    console.log('E');\n  \n  console.log('testing',y);\n},[enteredEmail])\n//   useEffect(()=>{\n//     console.log('checking the effect!');\n//     const identifier=setTimeout(()=>{\n//       setFormIsValid(\n//         state.value.includes('@') && enteredPassword.trim().length > 6\n//       );\n//     },500)\n//     return ()=>{console.log('cleanUp!')\n//     clearTimeout(identifier);}// clean up function(when the component is unmounts from the DOM )\n//    },[enteredEmail,enteredPassword])\n  \n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value)\n    dispatch({type:\"USER INPUT\", payload:event.target.value});\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length>6)\n   \n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n     state.value.includes('@') &&event.target.value.trim().length > 6 \n    );\n  };\n\n  const validateEmailHandler = () => {\n   dispatch({type:'INPUT_BLUR'})\n   \n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(state.value, enteredPassword);\n  };\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            state.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={state.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n           \n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n           \n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}  onClick={()=>{dispatch({type:\"email\", payload:{email: state.value, password: enteredPassword}})}}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}