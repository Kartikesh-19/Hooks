{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  consst;\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  useEffect(y => {\n    console.log('testing', y);\n  }, [enteredEmail]);\n  useEffect(() => {\n    console.log('checking the effect!');\n    const identifier = setTimeout(() => {\n      setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log('cleanUp!');\n      clearTimeout(identifier);\n    }; // clean up function(when the component is unmounts from the DOM )\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && enteredEmail.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          onClick: () => {\n            dispatch({\n              type: \"email\",\n              type: \"pass\"\n            });\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"g0NfpgIPrZJZYFJfGMyNLCqoR6M=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","Login","props","consst","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","state","dispatch","reducer","y","console","log","identifier","setTimeout","includes","trim","length","clearTimeout","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn","type"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n  consst \n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [state, dispatch]=useReducer(reducer, [])\nuseEffect((y) => {\n  \n  console.log('testing',y);\n},[enteredEmail])\n  useEffect(()=>{\n    console.log('checking the effect!');\n    const identifier=setTimeout(()=>{\n      setFormIsValid(\n        enteredEmail.includes('@') && enteredPassword.trim().length > 6\n      );\n    },500)\n    return ()=>{console.log('cleanUp!')\n    clearTimeout(identifier);}// clean up function(when the component is unmounts from the DOM )\n   },[enteredEmail,enteredPassword])\n  \n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n\n   \n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n           \n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n           \n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}  onClick={()=>{dispatch({type:\"email\",type:\"pass\"})}}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}