{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const reducer = (state, action) => {\n    debugger;\n\n    if (action.type === 'email') {\n      state = [...state];\n      console.log(state, 'hyyy');\n    } else {\n      return state;\n    }\n  };\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [state, dispatch] = useReducer(reducer, []);\n  console.log(state, 'Noo'); // useEffect((y) => {\n  //   console.log('testing',y);\n  // },[enteredEmail])\n  //   useEffect(()=>{\n  //     console.log('checking the effect!');\n  //     const identifier=setTimeout(()=>{\n  //       setFormIsValid(\n  //         enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //       );\n  //     },500)\n  //     return ()=>{console.log('cleanUp!')\n  //     clearTimeout(identifier);}// clean up function(when the component is unmounts from the DOM )\n  //    },[enteredEmail,enteredPassword])\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && enteredEmail.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          onClick: () => {\n            dispatch({\n              type: \"email\",\n              payload: {\n                email: enteredEmail,\n                password: enteredPassword\n              }\n            });\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"A0WlBkFw+XRmxkG2fV5AMLa/hpg=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","Login","props","reducer","state","action","type","console","log","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","dispatch","emailChangeHandler","event","target","value","passwordChangeHandler","trim","length","includes","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn","payload","email","password"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n  const reducer=(state,action)=>{\n    debugger\n    if(action.type==='email'){\n      \n     state=[...state,]\n     console.log(state,'hyyy');\n    }else{\n      return state\n    }\n\n  }\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [state, dispatch]=useReducer(reducer, [])\n  console.log(state,'Noo');\n// useEffect((y) => {\n  \n//   console.log('testing',y);\n// },[enteredEmail])\n//   useEffect(()=>{\n//     console.log('checking the effect!');\n//     const identifier=setTimeout(()=>{\n//       setFormIsValid(\n//         enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//       );\n//     },500)\n//     return ()=>{console.log('cleanUp!')\n//     clearTimeout(identifier);}// clean up function(when the component is unmounts from the DOM )\n//    },[enteredEmail,enteredPassword])\n  \n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n\n   \n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n           \n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n           \n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}  onClick={()=>{dispatch({type:\"email\", payload:{email: enteredEmail, password: enteredPassword}})}}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}